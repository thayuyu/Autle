@page "/"
@rendermode InteractiveServer


<PageTitle>Autle</PageTitle>

<h1>This is Autle</h1>

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 10px;
    }

    th {
        border: 1px solid #dddddd;
        text-align: left;
    }

    td {
        border: 1px solid #dddddd;
        text-align: left;
    }

    .custom-select {
        padding: 5px;
        width: 100%;
    }
</style>

<select class="custom-select" @bind="selectedCarName">
    <option value="">Select an option</option>
    @foreach (var item in CarList)
    {
        <option value="@item.Name">@item.Name</option>
    }
</select>

<button class="btn btn-primary" @onclick="SubmitGuess">Submit</button>
<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Manufacturer</th>
            <th>Car Type</th>
            <th>Horse Power</th>
            <th>Engine</th>
            <th>Doors</th>
            <th>Model Year</th>
            <th>Seconds 0-100</th>
        </tr>
    </thead>
    <tbody>
        @if (selectedCar != null)
        {
            
        
          @foreach (var item in Guesses)
          {
            <tr>
                <td>@item.Name</td>
                <td>@item.Manufacturer</td>
                <td>@item.CarType</td>
                <td>@item.HorsePwr.ToString()</td>
                <td>@item.Engine</td>
                <td>@item.Doors.ToString()</td>
                <td>@item.ModelYear.ToString()</td>
                <td>@item.ZeroToHundred.ToString()</td>
            </tr>
          }
        }
    </tbody>
</table>

@if (selectedCar == null)
{
    <div>nothing has been selected yet</div>
}


@code{
    static public List<Car> CarList = GetCars();
    Car SecretCar = GetRandomCar(CarList);
    static public List<Car> Guesses = new List<Car>();
    public Car selectedCar = null;
    public bool chosen;
    public string selectedCarName = "";

    static public List<Car> GetCars()
    {
        // TODO: Insert here data
        List<Car> list = new List<Car>
        {
            new Car(1, "R8", "Audi", "Coupe", 50, "Basic Engine", 5, 2019, 4), 
            new Car(2, "Aventador", "Lammborghini", "Super", 400, "Lammmbo Engine", 3, 2020, 2), 
            new Car(3, "Sprinter", "Toyotaa", "compact", 500, "TOYOTA", 3, 2005, 5) 
            //new Car(),
            //new Car(),
            //new Car(),
            //new Car(),
        };

        return list;
    }

    static public void GuessCar(Car SecretCar, Car GuessedCar)
    {
        Guesses.Add(GuessedCar);
        if (GuessedCar.CID == SecretCar.CID)
        {

        }

    }

    static public Car GetRandomCar(List<Car> list)
    {
        Random i = new Random();
        int index = i.Next(0, list.Count);
        return list[index];
    }

    public void SubmitGuess()
    {
        chosen = true;

         if(!ListContains(Guesses, selectedCarName) && GuessCar != null)
         {
             selectedCar = CarList.Find(car => car.Name == selectedCarName);
             GuessCar(SecretCar, selectedCar);
         }
    }

    // public void SelectedChoiceChanged(ChangeEventArgs e)
    // {
    //     chosen = true;
    //     if (e.Value is not null)
    //     {        
    //         selectedCar = (Car)e.Value;
            
    //         if (!ListContains(Guesses, selectedCar))
    //        {
    //           GuessCar(SecretCar, selectedCar);
    //        }
    //     }
    // }

    public bool ListContains(List<Car> list, string car)
    {
        foreach(var item in list)
        {
            if (car == item.Name)
            {
                return true;
            }
        }
        return false;
    }
}