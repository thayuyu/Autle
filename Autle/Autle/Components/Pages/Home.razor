@page "/"
@rendermode InteractiveServer


<PageTitle>Autle</PageTitle>

<h1>This is Autle</h1>

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 10px;
    }

    th {
        border: 1px solid #dddddd;
        text-align: left;
    }

    td {
        border: 1px solid #dddddd;
        text-align: left;
    }

    .custom-select {
        padding: 5px;
        width: 100%;
    }
</style>

<select class="custom-select" @bind="selectedCarName">
    <option value="">Select an option</option>
    @foreach (var item in CarList)
    {
        <option value="@item.Name">@item.Name</option>
    }
</select>

<button class="btn btn-primary" @onclick="SubmitGuess">Submit</button>
<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Manufacturer</th>
            <th>Car Type</th>
            <th>Horse Power</th>
            <th>Engine</th>
            <th>Doors</th>
            <th>Model Year</th>
            <th>Seconds 0-100</th>
        </tr>
    </thead>
    <tbody>
        @if (selectedCar != null)
        {
          @foreach (var item in OrderedGuesses)
          {
            <tr>
                <td>@item.Name</td>
                <td>@item.Manufacturer</td>
                <td>@item.CarType</td>
                <td>@item.HorsePwr.ToString()</td>
                <td>@item.Engine</td>
                <td>@item.Doors.ToString()</td>
                <td>@item.ModelYear.ToString()</td>
                <td>@item.ZeroToHundred.ToString()</td>
            </tr>
          }
        }
    </tbody>
</table>

<p>@SecretCar.Name</p>
@if (IsWin != 0)
{
    <div class="text-bg-success p-3">YOU WON! ! ! YIPPIE </div>
}

@if (notchosen == true)
{
    <div>nothing has been selected yet</div>
}
@if (alrchosen == true)
{
    <div>This car has already been chosen</div>
}


@code{
    static public List<Car> CarList = GetCars();
    Car SecretCar = GetRandomCar(CarList);
    public List<Car> Guesses = new List<Car>();
    public List<Car> OrderedGuesses = new List<Car>();

    public Car selectedCar = null;
    public bool alrchosen;
    public string selectedCarName = "";
    public bool notchosen = false;
    public uint IsWin = 0;

    static public List<Car> GetCars()
    {
        // TODO: Insert here data
        List<Car> list = new List<Car>
        {
            new Car(1, "R8", "Audi", "Coupe", 50, "Basic Engine", 5, 2019, 4), 
            new Car(2, "Aventador", "Lamborghini", "Super", 400, "Lambo Engine", 3, 2020, 2), 
            new Car(3, "Sprinter", "Toyotaa", "compact", 500, "TOYOTA", 3, 2005, 5) 
            //new Car(),
            //new Car(),
            //new Car(),
            //new Car(),
        };

        return list;
    }

    public void GuessCar(Car SecretCar, Car GuessedCar)
    {

        Guesses.Add(GuessedCar);
        // OrderedGuesses = Guesses.OrderByDescending((item, index) => index).ToList();
        if (GuessedCar.CID == SecretCar.CID)
        {
            //TODO: Add win screen/message
            IsWin = 1; 
        }
        else
        {
            //TODO: Check what's similar and show in table
        }

    }

    static public Car GetRandomCar(List<Car> list)
    {
        Random i = new Random();
        int index = i.Next(0, list.Count);
        return list[index];
    }

    public void SubmitGuess()
    {
        notchosen = false;
        alrchosen = false;
        if (selectedCarName == null|| selectedCarName == "")
        {
            notchosen = true;
        }
        else
        {
            if (ListContains(Guesses, selectedCarName))
            {
                alrchosen = true;
            }
            else
            {
                selectedCar = CarList.Find(car => car.Name == selectedCarName);
                GuessCar(SecretCar, selectedCar);
            }
        }
        
    }

    // public void SelectedChoiceChanged(ChangeEventArgs e)
    // {
    //     chosen = true;
    //     if (e.Value is not null)
    //     {        
    //         selectedCar = (Car)e.Value;
            
    //         if (!ListContains(Guesses, selectedCar))
    //        {
    //           GuessCar(SecretCar, selectedCar);
    //        }
    //     }
    // }

    public bool ListContains(List<Car> list, string car)
    {
        foreach(var item in list)
        {
            if (car == item.Name)
            {
                return true;
            }
        }
        return false;
    }
}