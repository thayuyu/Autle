@page "/fictional"
@rendermode InteractiveServer


<PageTitle>Fictional Autle</PageTitle>
<div class="page">
    <h1>GTA <a style="color: green;">V</a> Autle</h1>

    @if (difficulty == "0")
    {
        <h2>Yo Fam! Choose!</h2>
        <select @bind="@difficulty">
            <option value="0" disabled hidden>Select a Difficulty</option>
            <option value="Easy">Easy</option>
            <option value="Medium">Medium</option>
            <option value="Hard">Hard</option>
        </select>
    }
    else
    {
        <h2>
            Autle GTA V! - Difficulty: @difficulty
        </h2>
    }


    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #7BB274;
        }

        h1 {
            color: #333;
            text-align: center;
        }

        table {
            border-collapse: collapse;
            width: 100%;
            margin-top: 20px;
        }

        th, td {
            padding: 10px;
            text-align: center;
            border: 2px solid #333;
        }

        th {
            background-color: #ddd;
        }

        .custom-select {
            padding: 10px;
            width: 100%;
            margin-bottom: 20px;
        }

        .btn {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            display: block;
            margin: auto;
            width: 300px;
        }

            .btn:disabled {
                background-color: #ccc;
                cursor: not-allowed;
            }

            .btn:hover {
                background-color: #0056b3;
            }

        .result-cell {
            font-weight: bold;
        }

        .correct {
            background-color: #4CAF50;
        }

        .incorrect {
            background-color: #E34234;
        }

        .nearcorrect {
            background-color: orange;
        }

        .win-message {
            background-color: #4CAF50;
            color: #fff;
            text-align: center;
            padding: 10px;
            font-weight: bold;
            margin-top: 20px;
            border: 2px solid black;
        }

        .lose-message {
            background-color: #E34234;
            color: black;
            text-align: center;
            padding: 10px;
            font-weight: bold;
            margin-top: 20px;
        }

        .error-message {
            color: #FF0000;
            margin-top: 10px;
            font-weight: bold;
        }

        .selected-car {
            font-weight: bold;
            color: #333;
            text-align: center;
            margin-top: 20px;
        }

        .select-difficuly {
            width: 100px;
            height: 45px;
        }

        .car-option {
            padding: 7px;
            border: 1px solid black;
        }
    </style>

    @if (IsWin == 0 && difficulty != "0")
    {
        <select class="custom-select" size="@selSize" @onchange="ChangeSelSize">
            <option value="" selected disabled hidden>Select A Car</option>
            @foreach (var item in CarList)
            {
                <option class="car-option" value="@item.Name">@item.Manufacturer @item.Name</option>
            }
        </select>
        <button class="btn" @onclick="SubmitGuess">Submit</button>
    }
    else
    {
        <select class="custom-select" @bind="selectedCarName" disabled>
            <option value="">Select A Car</option>
            @foreach (var item in CarList)
            {
                <option value="@item.Name">@item.Manufacturer @item.Name</option>
            }
        </select>
        <button class="btn" disabled>Submit</button>
    }

    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Manufacturer</th>
                <th>Car Class</th>
                <th>Seats</th>
                <th>Top Speed</th>
                <th>Realesed in </th>
                <th>Released in </th>
                <th>Can be bought in</th>
            </tr>
        </thead>
        <tbody>
            @if (selectedCar != null)
            {
                @foreach (var item in Guesses)
                {
                    <tr>
                        @if (item.Name == SecretCar.Name)
                        {

                            <td class="correct">@item.Name</td>
                        }
                        else
                        {
                            <td class="incorrect">@item.Name</td>
                        }

                        @if (item.Manufacturer == SecretCar.Manufacturer)
                        {
                            <td class="correct">@item.Manufacturer</td>
                        }
                        else
                        {
                            <td class="incorrect">@item.Manufacturer</td>
                        }

                        @if (item.Class == SecretCar.Class)
                        {
                            <td class="correct">@item.Class</td>
                        }
                        else
                        {
                            <td class="incorrect">@item.Class</td>
                        }

                        @if (item.Seats == SecretCar.Seats)
                        {
                            <td class="correct">@item.Seats</td>
                        }
                        else if (item.Seats > SecretCar.Seats)
                        {
                            @if (item.Seats - SecretCar.Seats <= 2)
                            {
                                <td class="nearcorrect">
                                    @item.Seats.ToString()<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                                    </svg>
                                </td>
                            }
                            else
                            {
                                <td class="incorrect">
                                    @item.Seats.ToString()<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                                    </svg>
                                </td>
                            }
                        }
                        else if (item.Seats < SecretCar.Seats)
                        {
                            @if (SecretCar.Seats - item.Seats <= 2)
                            {
                                <td class="nearcorrect">
                                    @item.Seats.ToString()<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                                    </svg>
                                </td>
                            }
                            else
                            {
                                <td class="incorrect">
                                    @item.Seats.ToString()<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                                    </svg>
                                </td>
                            }
                        }

                        @if (item.TopSpeed == SecretCar.TopSpeed)
                        {
                            <td class="correct">@item.TopSpeed km/h</td>
                        }
                        else if (item.TopSpeed > SecretCar.TopSpeed)
                        {
                            @if (item.TopSpeed - SecretCar.TopSpeed <= 25)
                            {
                                <td class="nearcorrect">
                                    @item.TopSpeed.ToString() km/h <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                                    </svg>
                                </td>
                            }
                            else
                            {
                                <td class="incorrect">
                                    @item.TopSpeed.ToString() km/h <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                                    </svg>
                                </td>
                            }
                        }
                        else if (item.TopSpeed < SecretCar.TopSpeed)
                        {
                            @if (SecretCar.TopSpeed - item.TopSpeed <= 25)
                            {
                                <td class="nearcorrect">
                                    @item.TopSpeed.ToString() km/h <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                                    </svg>
                                </td>
                            }
                            else
                            {
                                <td class="incorrect">
                                    @item.TopSpeed.ToString() km/h <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                                    </svg>
                                </td>
                            }
                        }

                        @if (item.UpdateName == SecretCar.UpdateName)
                        {
                            <td class="correct">@item.UpdateName</td>
                        }
                        else
                        {
                            <td class="incorrect">@item.UpdateName</td>

                        }

                        @if (item.UpdateYear == SecretCar.UpdateYear)
                        {
                            <td class="correct">@item.UpdateYear.ToString()</td>
                        }
                        else if (item.UpdateYear > SecretCar.UpdateYear)
                        {
                            @if (item.UpdateYear - SecretCar.UpdateYear <= 2)
                            {
                                <td class="nearcorrect">
                                    @item.UpdateYear.ToString() <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                                    </svg>
                                </td>
                            }
                            else
                            {
                                <td class="incorrect">
                                    @item.UpdateYear.ToString() <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1" />
                                    </svg>
                                </td>
                            }

                        }
                        else if (item.UpdateYear < SecretCar.UpdateYear)
                        {
                            @if (SecretCar.UpdateYear - item.UpdateYear <= 2)
                            {
                                <td class="nearcorrect">
                                    @item.UpdateYear.ToString() <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                                    </svg>
                                </td>
                            }
                            else
                            {
                                <td class="incorrect">
                                    @item.UpdateYear.ToString() <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
                                    </svg>
                                </td>
                            }
                        }

                        @if (item.PlaceToBuy == SecretCar.PlaceToBuy)
                        {
                            <td class="correct">@item.PlaceToBuy</td>
                        }
                        else
                        {
                            <td class="incorrect">@item.PlaceToBuy</td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (IsWin == 1)
    {
        <div class="win-message">YOU WON! CONGRATULATIONS!</div>
        <button class="btn" @onclick="DifReset">Play again!</button>
        <button class="btn" @onclick="Reset">Change Difficulty?</button>
    }
    else if (IsWin == 2)
    {
        <div class="lose-message">You lost, want to try again? The Car was: @SecretCar.Manufacturer @SecretCar.Name</div>
        <button class="btn" @onclick="DifReset">Have another go! </button>
        <button class="btn" @onclick="Reset">Change Difficulty?</button>
    }

    @if (notchosen)
    {
        <div class="error-message">Please select a car before submitting.</div>
    }

    @if (alrchosen)
    {
        <div class="error-message">This car has already been chosen.</div>
    }


</div>
@code {
    static public List<FictionalCar> CarList = GetCars();
    FictionalCar SecretCar = GetRandomCar(CarList);
    public List<FictionalCar> Guesses = new List<FictionalCar>();
    public FictionalCar selectedCar = null;
    public bool alrchosen;
    public string selectedCarName = "";
    public bool notchosen = false;
    public uint IsWin = 0;
    public string difficulty = "0";
    public int iteration = 1;
    public int? maxIterations = 0;
    public int selSize = 1;



    /// <summary>
    /// Resets all variables to their starting value
    /// </summary>
    public void Reset()
    {
        notchosen = false;
        alrchosen = false;
        IsWin = 0;
        Guesses = new List<FictionalCar>();
        selectedCar = null;
        selectedCarName = "";
        SecretCar = GetRandomCar(CarList);
        difficulty = "0";
        iteration = 1;
        maxIterations = 0;
        selSize = 1;

    }

    /// <summary>
    /// Same as Reset() but keeps the same difficulty that has been chosen.
    /// </summary>
    public void DifReset()
    {
        notchosen = false;
        alrchosen = false;
        IsWin = 0;
        Guesses = new List<FictionalCar>();
        selectedCar = null;
        selectedCarName = "";
        SecretCar = GetRandomCar(CarList);
        iteration = 1;
        maxIterations = 0;
        selSize = 1;
    }

    ///  <summary>
    /// Function to get all cars that are saved in the code
    /// </summary>
    /// <returns> List<Car> with all the cars with their respective information </returns>
    static public List<FictionalCar> GetCars()
    {
        // TODO: Insert here data
        List<FictionalCar> list = new List<FictionalCar>
        {
            new FictionalCar(1,  "Panto", "Benefactor", "Compacts", 2, 174.20, "The \"I\'m Not a Hipster\" Update", 2014, "Southern San Andreas Super Autos" ),
            new FictionalCar(2,  "Club", "BF", "Compacts", 2, 184.75, "Los Santos Summer Special", 2020, "Southern San Andreas Super Autos" ),
            new FictionalCar(3,  "Ramp Buggy", "BF", "Off-Road", 2, 197.95, "Import / Export", 2016, "Warstock Cache & Carry" ),
            new FictionalCar(4,  "Banshee 900R", "Bravado", "Super", 2, 172.20, "Drop Zone Update", 2016, "Benny's Original Motor Works" ),
            new FictionalCar(5,  "Buffalo", "Bravado", "Sports", 4, 191.35, "On Release", 2013, "Southern San Andreas Super Autos" ),
            new FictionalCar(6,  "Marshall", "Cheval", "Off-Road", 2, 145.16, "On Release", 2013, "Warstock Cache & Carry" ),
            new FictionalCar(7,   "Vagner", "Dewbauchee", "Super", 2, 212.34, "Gunrunning", 2017, "Legendary Motorsports"),
            new FictionalCar(8,  "Akuma", "Dinka", "Motorcycles", 2, 191.35, "On Release", 2013, "Southern San Andreas Super Autos" ),
            new FictionalCar(9, "Jester RR", "Dinka", "Sports", 2, 201.25, "Los Santos Tuners", 2021, "Legendary Motorsports" ),
            new FictionalCar(10,  "Sugoi", "Dinka", "Sports", 4, 205.87, "The Diamond Casino & Resort", 2019, "Southern San Andreas Super Autos" ),
            new FictionalCar(11,   "Cheetah", "Grotti", "Super", 2, 201.91, "On Release", 2013, "Legendary Motorsports" ),
            new FictionalCar(12,   "Itali GTO", "Grotti", "Sports", 2, 212.72, "Arena War", 2018, "Legendary Motorsports" ),
            new FictionalCar(13,   "Itali RSX", "Grotti", "Sports", 2, 215.36, "The Cayo Perico Heist", 2020, "Legendary Motorsports" ),
            new FictionalCar(14,  "Dump", "HVY", "Industrial", 1,  49.9, "On Release", 2013, "Warstock Cache & Carry" ),
            new FictionalCar(15,  "Insurgent", "HVY", "Off-Road", 6, 171.56, "Heists", 2014, "Warstock Cache & Carry" ),
            new FictionalCar(16,   "Duke O'Death", "Imponte", "Muscle", 2, 184.27 , "Cunning Stunts: Special Vehicle Circuit", 2017, "Warstock Cache & Carry" ),
            new FictionalCar(17,  "Ruiner 2000", "Imponte", "Muscle", 2, 200.59, "Import / Export", 2016, "Warstock Cache & Carry" ),
            new FictionalCar(18,  "Futo", "Karin", "Sports", 2, 191.91, "On Release", 2013, "Southern San Andreas Super Autos" ),
            new FictionalCar(19,  "Kuruma", "Karin", "Sports", 4, 184.75, "Heists", 2014, "Southern San Andreas Super Autos" ),
            new FictionalCar(20,  "Sultan RS", "Karin", "Super", 2, 195.31, "Drop Zone Update", 2016, "Benny's Original Motor Works" ),
            new FictionalCar(21,   "Furore GT", "Lampadati", "Sports", 2, 200.59, "Last Team Standing Update", 2014, "Legendary Motorsports" ),
            new FictionalCar(22,  "Manchez Scout", "Maibatsu", "Motorcycles", 1, 225, "The Cayo Perico Heist", 2020, "Warstock Cache & Carry" ),
            new FictionalCar(23,  "Asbo", "Maxwell", "Compacts", 2, 166.28, "The Diamond Casino & Resort", 2019, "Southern San Andreas Super Autos" ),
            new FictionalCar(24,  "Caddy", "Nagasaki", "Utility", 2, 65.00, "On Release", 2013, "Not Purchasable" ),
            new FictionalCar(25,  "Jugular", "Ocelot", "Sports", 4, 207.85, "The Diamond Casino & Resort", 2019, "Legendary Motorsport" ),
            new FictionalCar(26,  "Pariah", "Ocelot", "Sports", 2, 218.87, "The Doomsday Heist", 2017, "Legendary Motorsport" ),
            new FictionalCar(27,  "Stromberg", "Ocelot", "Sports Classics", 2, 197.95, "The Doomsday Heist", 2017, "Warstock Cache & Carry" ),
            new FictionalCar(28,  "Entity XF", "Överflöd", "Super", 2, 204.55, "On Release", 2013, "Legendary Motorsports" ),
            new FictionalCar(29,  "Tyrant", "Överflöd", "Super", 2, 217.74, "Southern San Andreas Super Sport Series", 2018, "Legendary Motorsports" ),
            new FictionalCar(30,  "Bati 801", "Pegassi", "Motorcycles", 2, 197.95, "On Release", 2013, "Southern San Andreas Super Autos" ),
            new FictionalCar(31,  "Infernus", "Pegassi", "Super", 2, 197.95, "On Release", 2013, "Legendary Motorsport" ),
            new FictionalCar(32,  "Oppressor", "Pegassi", "Motorcycles", 1, 195.31, "Gunrunning", 2017, "Warstock Cache & Carry" ),
            new FictionalCar(33,   "Tempesta", "Pegassi", "Super", 2, 207.20, "Import / Export", 2016, "Legendary Motorsports"),
            new FictionalCar(34,   "Zentorno", "Pegassi", "Super", 2, 209.80, "High Life", 2014, "Legendary Motorsports"),
            new FictionalCar(35,  "Comet", "Pfister", "Sports", 2, 207.85, "On Release", 2013, "Legendary Motorsport" ),
            new FictionalCar(36,  "Neon", "Pfister", "Sports", 4, 206.53, "The Doomsday Heist", 2017, "Legendary Motorsport" ),
            new FictionalCar(37,  "Deveste Eight","Principe", "Super", 2, 224.34, "Arena War", 2019, "Legendary Motorsports" ),
            new FictionalCar(38,  "Faggio", "Principe", "Motorcycles", 2, 166.16, "On Release", 2013, "Southern San Andreas Super Autos" ),
            new FictionalCar(39,  "Lectro", "Principe", "Motorcycles", 2, 175.82, "Heists", 2014, "Legendary Motorsports" ),
            new FictionalCar(40,  "Tyrus", "Progen", "Super", 2, 212.47, "Cunning Stunts", 2016, "Legendary Motorsports" ),
            new FictionalCar(41,  "Cheburek", "RUNE", "Sports Classics", 4, 174.61, "Southern San Andreas Super Sport Series", 2018, "Southern San Andreas Super Autos" ),
            new FictionalCar(42,  "Zhaba", "RUNE", "Off-Road", 4, 122.07, "The Diamond Casino & Resort", 2019, "Warstock Cache & Carry" ),
            new FictionalCar(43,  "Hakuchou Drag", "Shitzu", "Motorcycles", 2, 209.83, "Bikers", 2016, "Legendary Motorsport" ),
            new FictionalCar(44,  "Adder", "Truffade", "Super", 2, 194.00 , "On Release", 2013, "Legendary Motorsports" ),
            new FictionalCar(45,  "Nero Custom", "Truffade", "Super", 2, 211.40, "Import / Export", 2016, "Benny's Original Motor Works" ),
            new FictionalCar(46,  "SC1", "Übermacht", "Super", 2, 209.83, "The Doomsday Heist", 2017, "Legendary Motorsports" ),
            new FictionalCar(47,  "Zion Classic", "Übermacht", "Sports Classics", 2, 196.63, "The Diamond Casino & Resort", 2019, "Southern San Andreas Super Autos" ),
            new FictionalCar(48,  "Nebula Turbo", "Vulcar", "Sports Classics", 2, 138.00, "The Diamond Casino & Resort", 2019, "Southern San Andreas Super Autos" ),
            new FictionalCar(49,  "Dynasty", "Weeny", "Sports Classics", 4, 155.72, "The Diamond Casino & Resort", 2019, "Southern San Andreas Super Autos" ),
            new FictionalCar(50,  "Issi Sport", "Weeny", "Sports", 2, 195.31, "The Diamond Casino & Resort", 2019, "Southern San Andreas Super Autos" ),
};

        return list;
    }

    /// <summary>
    /// Adds the guessed car into the list of guesses and then checks if the car is the secret one,
    /// if it is changes values of variable IsWin to 1 and the game ends, if it is not, depeneding
    /// on the difficulty, checks if the player can guess again.
    /// </summary>
    /// <param name="SecretCar">Is the car that should be guessed</param>
    /// <param name="GuessedCar">Is the car that has just been guessed</param>
    public void GuessCar(FictionalCar SecretCar, FictionalCar GuessedCar)
    {
        if (difficulty == "Easy")
        {
            maxIterations = null;
        }
        else if (difficulty == "Medium")
        {
            maxIterations = 10;
        }
        else if (difficulty == "Hard")
        {
            maxIterations = 5;
        }

        Guesses.Add(GuessedCar);

        if (GuessedCar.CID == SecretCar.CID)
        {
            IsWin = 1;
        }
        else
        {
            if (maxIterations == null)
            {

            }
            else if (maxIterations != 0 && iteration < maxIterations)
            {
                iteration++;
            }
            else
            {
                IsWin = 2;
            }
        }
    }


    /// <summary>
    /// selects random Car from given list.
    /// </summary>
    /// <param name="list">List where the random car will get chosen.</param>
    /// <returns>A random Car from the given list.</returns>
    static public FictionalCar GetRandomCar(List<FictionalCar> list)
    {
        Random i = new Random();
        int index = i.Next(0, list.Count);
        return list[index];
    }

    ///  <summary>
    /// Checks if a car has been selected or if it has already been guessed.
    /// </summary>
    public void SubmitGuess()
    {
        if (IsWin == 0)
        {
            notchosen = false;
            alrchosen = false;
            if (selectedCarName == null || selectedCarName == "")
            {
                notchosen = true;
            }
            else
            {
                if (ListContains(Guesses, selectedCarName))
                {
                    alrchosen = true;
                }
                else
                {
                    selectedCar = CarList.Find(car => car.Name == selectedCarName);
                    GuessCar(SecretCar, selectedCar);
                }
            }
        }
    }

    public void ChangeSelSize(ChangeEventArgs e)
    {
        selectedCarName = e.Value.ToString();
        selSize = 7;
    }

    /// <summary>
    /// basic function to check if a list contains the chosen car name
    /// </summary>
    /// <param name="list">list where the car has to be searched</param>
    /// <param name="car">name of the car that should be looked for</param>
    /// <returns>true if the car is in the list, false if the list doesn't contain the car.</returns>
    public bool ListContains(List<FictionalCar> list, string car)
    {
        foreach (var item in list)
        {
            if (car == item.Name)
            {
                return true;
            }
        }
        return false;
    }
}